apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: video-processor-auth
  labels:
    app: auth-service
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.36
        command: ['sh', '-c']
        args:
        - |
          until nc -z auth-postgres 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL is ready!"
      - name: wait-for-redis
        image: busybox:1.36
        command: ['sh', '-c']
        args:
        - |
          until nc -z auth-redis 6379; do
            echo "Waiting for Redis..."
            sleep 2
          done
          echo "Redis is ready!"
      containers:
      - name: auth-service
        image: fabioctetsuo/video-processor-api-authentication:latest
        ports:
        - containerPort: 3002
        envFrom:
        - configMapRef:
            name: auth-service-config
        env:
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-service-secret
              key: JWT_SECRET
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /auth/health
            port: 3002
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /auth/health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3